"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.auto.ts
var index_auto_exports = {};
__export(index_auto_exports, {
  onErrorResumeNext: () => onErrorResumeNext
});
module.exports = __toCommonJS(index_auto_exports);

// src/private/isPromise.ts
function isPromise(value) {
  return !!((typeof value === "function" || typeof value === "object") && value && "then" in value && typeof value.then === "function");
}

// src/index.auto.ts
function onErrorResumeNext(fn, context) {
  try {
    const result = fn.call(context);
    if (isPromise(result)) {
      return new Promise((resolve) => result.then(resolve, () => resolve(void 0)));
    }
    return result;
  } catch {
    return void 0;
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  onErrorResumeNext
});
//# sourceMappingURL=on-error-resume-next.auto.js.map